// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © iamlilun

//*------------------------------------
//* 快速下單不等回踩版本
//* 進場: 4倍不逆市確定後交叉就進場
//* 出場: 多單K棒收在ema12之下..空單K棒收在ema12之上
//*------------------------------------

//@version=5
indicator(title='vegas改', shorttitle='vegas改', overlay=true, max_labels_count=500)


//show debug data label
dCross = input.bool(defval=false, title="顯示交叉", group="Debug")
dEMA48 = input.bool(defval=false, title="顯示EMA48", group="Debug")
dDojiShort = input.bool(defval=false, title="顯示十字或短實體", group="Debug")
dBackTunnel = input.bool(defval=false, title="顯示回踩均線", group="Debug")
dBackEMA12 = input.bool(defval=false, title="顯示返回EMA12", group="Debug")


/// -------------------------------------------
/// 準備均線數據..
/// ema12 ema144 ema169 ema288 ema338 ema576 ema676
/// ------------------------------------------

//ema12 過濾線
len12 = input.int(12, minval=1, title='Length')
src12 = input(close, title='Source')
offset12 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema12 = ta.ema(src12, len12)
plot(ema12, title='EMA12', color=color.new(color.red, 0), offset=offset12)

//
// 基於4倍不逆市..把12MA的4倍也拉進來
// 12 * 4 = 48
// 144 * 4 = 576
// 169 * 4 = 676
// 4倍时間換算
// fourTimes = str.tostring(str.tonumber(timeframe.period) * 4) 
// 趕羚羊.轉出來的類型是series string, request.security().不吃..
// 只好苦工switch..
string fourTimes = switch timeframe.period
	//15 min * 4
	"15" => "60"
	//1 hour = 60 min * 4
	"60" => "240"
	//4 hour = 240 min * 4
	"240" => "960"
	//1 day = D * 4
	"D" => "4D"
	//1 month = M * 4
	"M" => "4M"
	//default
	=> "60"

// 邏輯驗證過後就可以設為透明來隱藏
ema48 = request.security(syminfo.tickerid, fourTimes, expression=ema12) 
plot(ema48, title='EMA48', color=color.new(#FF0088, dEMA48 ? 0 : 100), offset=offset12, style=plot.style_line) //pink

//ema144, 169 短期線
len144 = input.int(144, minval=1, title='Length')
src144 = input(close, title='Source')
offset144 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema144 = ta.ema(src144, len144)git
plot(ema144, title='EMA144', color=color.new(color.orange, 0), offset=offset144)

len169 = input.int(169, minval=1, title='Length')
src169 = input(close, title='Source')
offset169 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema169 = ta.ema(src169, len169)
plot(ema169, title='EMA169', color=color.new(color.orange, 0), offset=offset169)

//ema288, 338 中期線
len288 = input.int(288, minval=1, title='Length')
src288 = input(close, title='Source')
offset288 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema288 = ta.ema(src288, len288)
plot(ema288, title='EMA288', color=color.new(color.white, 0), offset=offset288)

len338 = input.int(338, minval=1, title='Length')
src338 = input(close, title='Source')
offset338 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema338 = ta.ema(src338, len338)
plot(ema338, title='EMA338', color=color.new(color.white, 0), offset=offset338)

//ema576, 676 長期線
len576 = input.int(576, minval=1, title='Length')
src576 = input(close, title='Source')
offset576 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema576 = ta.ema(src576, len576)
plot(ema576, title='EMA576', color=color.new(color.lime, 0), offset=offset576)

len676 = input.int(676, minval=1, title='Length')
src676 = input(close, title='Source')
offset676 = input.int(title='Offset', defval=0, minval=-500, maxval=500)
ema676 = ta.ema(src676, len676)
plot(ema676, title='EMA676', color=color.new(color.lime, 0), offset=offset676)


/// --------------------------------------
/// 進出場邏輯
/// --------------------------------------
///
/// 做多條件:
///	 	1. EMA48金叉突破 576,676
/// 	2. EMA12金叉突破 144,169
/// 止盈止損:
///		@TODO K棒收在ema12之下
///
/// --------------------------------------
/// 做空條件:
/// 	1. 48EMA死叉跌破 576,676
/// 	2. 12EMA死叉跌破 144,169
/// 止盈止損:
///		@TODO K棒收在ema12之上
/// --------------------------------------

///------ variables --------------

// 均線交叉記錄
// key: 0 => ema144, 1 => ema169, 2 => ema576, 3 => ema676 
// value: 0 => initial, 1 => 金叉, 2 => 死叉
var lineCross = array.new_int(4, 0)


// 最後一筆持倉記錄
// key: 只有一個..但用array才能copy出來做判斷..如果只用變數會造成判斷污染
// value: 0 => initial, 1 => 多單, 2 => 空單
var lastPosition = array.new_int(1, 0)


///---- functions -------------

///
/// 判斷是否滿足下單條件..
/// returns {number}: 0 => 未滿足, 1 => 多單, 2空單
/// 
///
verifyOrder() =>
	res = 0
	longCnt = 0
	shortCnt = 0
	for i = 0 to 3
		if array.get(lineCross, i) == 1
			longCnt += 1
		if array.get(lineCross, i) == 2
			shortCnt += 1

	res := longCnt == 4 ? 1 : 
	   shortCnt == 4 ? 2 : 0
	
	if res > 0
	// 下單條件滿足..清空條件讓下一筆資料重新判斷
		for i = 0 to 3
			array.set(lineCross, i, 0)
	res

///-------- logic ----------

if ta.crossover(ema12, ema144)
	//ema12金叉突破ema144
	label.new(dCross ? bar_index : na, high + 100, text="144金叉", color=#FFD306)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 1, 0)
	array.set(lineCross, 0, 1)

if ta.crossover(ema12, ema169)
	//ema12金叉突破ema169
	label.new(dCross ? bar_index : na, high + 100, text="169金叉", color=#FFD306)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 1, 0)
	array.set(lineCross, 1, 1)

if ta.crossover(ema48, ema576)
	//ema48金叉突破ema576
	label.new(dCross ? bar_index : na, high + 100, text="576金叉", color=#FFF0AC)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 1, 0)
	array.set(lineCross, 2, 1)

if ta.crossover(ema48, ema676)
	//ema48金叉突破ema676
	label.new(dCross ? bar_index : na, high + 100, text="676金叉", color=#FFF0AC)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 1, 0)
	array.set(lineCross, 3, 1)

if ta.crossunder(ema12, ema144)
	//ema12死叉跌破ema144
	label.new(dCross ? bar_index : na, high + 100, text="144死叉", color=#8E8E8E)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 0, 0)
	array.set(lineCross, 0, 2)

if ta.crossunder(ema12, ema169)
	//ema12死叉跌破ema169
	label.new(dCross ? bar_index : na, high + 100, text="169死叉", color=#8E8E8E)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 0, 0)
	array.set(lineCross, 1, 2)
	
if ta.crossunder(ema48, ema576)
	//ema48死叉跌破ema576
	label.new(dCross ? bar_index : na, high + 100, text="576死叉", color=#D0D0D0)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 0, 0)
	array.set(lineCross, 2, 2)

if ta.crossunder(ema48, ema676)
	//ema48死叉跌破ema676.
	label.new(dCross ? bar_index : na, high + 100, text="676死叉", color=#D0D0D0)
	array.set(backTunnel, 0, 0)
	array.set(back12EMA, 0, 0)
	array.set(lineCross, 3, 2)


order = verifyOrder()

///---------------------------
/// 下單標示
///---------------------------
plotshape(order == 1, style=shape.labelup, location=location.belowbar, size=size.normal, text='多單', title='多單', color=#32CD32, textcolor=color.white)
plotshape(order == 2, style=shape.labeldown, location=location.abovebar, size=size.normal, text='空單', title='空單', color=#FF1493, textcolor=color.white)

/// ----------------------
/// 傳送通知
/// ----------------------
alertcondition(order == 1, title='Veges-多單通知', message='Veges 做多囉')
alertcondition(order == 2, title='Veges-空單通知', message='Veges 做空囉')
